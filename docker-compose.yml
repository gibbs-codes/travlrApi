version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: travlr-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: travlrapi
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - travlr-network

  # TravlrAPI Application
  api:
    build: .
    container_name: travlr-api
    restart: always
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:password@mongodb:27017/travlrapi?authSource=admin
      PORT: 3000
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      - mongodb
    networks:
      - travlr-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (for caching and rate limiting)
  redis:
    image: redis:7.2-alpine
    container_name: travlr-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - travlr-network
    command: redis-server --appendonly yes

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:1.25-alpine
    container_name: travlr-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api
    networks:
      - travlr-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  travlr-network:
    driver: bridge

# Development override
# Use: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up