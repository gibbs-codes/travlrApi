openapi: 3.0.3
info:
  title: TravlrAPI MVP
  description: |
    A comprehensive travel planning API that uses AI agents to generate personalized trip recommendations.
    
    The API orchestrates multiple specialized agents (flight, accommodation, activity, restaurant, transportation) 
    to create customized travel itineraries based on user preferences and budget constraints.
    
    ## Key Features
    - **Agent-based Planning**: AI agents work in parallel to find optimal recommendations
    - **Real-time Status**: Track planning progress with live agent execution updates
    - **Flexible Selection**: Users can select multiple recommendations per category
    - **Collaborative Planning**: Support for multiple users on shared trips
    - **Performance Optimized**: Sub-30 second trip planning with async execution
    
    ## Base URL
    - Development: `http://localhost:3000`
    - Production: TBD
    
    ## Authentication
    Currently anonymous access. Future versions will implement JWT authentication.
    
    ## Rate Limits
    - 100 requests per minute per IP
    - 10 trip creations per hour per IP
    - Status polling: 1 request per second
  version: 1.0.0
  contact:
    name: TravlrAPI Support
    email: support@travlr.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://api.travlr.com
    description: Production server (TBD)

paths:
  /health:
    get:
      summary: Health Check
      description: |
        Check server and database connectivity status.
        Use this endpoint to verify the API is operational before making other requests.
      operationId: getHealthStatus
      tags:
        - System
      responses:
        '200':
          description: Server is healthy and database is connected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              example:
                status: "OK"
                message: "Server is running"
                database:
                  isConnected: true
                  readyState: 1
                  host: "localhost"
                  port: 27017
                  name: "travlrapi"
        '500':
          description: Server or database connection issues
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/trip/create:
    post:
      summary: Create Trip
      description: |
        Create a new trip and optionally trigger AI agent execution for recommendation generation.
        
        **Agent Execution Process:**
        1. Trip created with status 'planning'
        2. 5 AI agents execute in dependency-based phases:
           - Phase 1 (Parallel): Flight, Accommodation
           - Phase 2 (Sequential): Activity, Restaurant, Transportation
        3. Each agent generates 3-5 recommendations with confidence scores
        4. Trip status changes to 'recommendations_ready' when complete
        
        **Execution Time:** Typically 15-30 seconds for full agent execution.
      operationId: createTrip
      tags:
        - Trips
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTripRequest'
            examples:
              paris_trip:
                summary: Paris vacation example
                value:
                  title: "Romantic Paris Getaway"
                  destination: "Paris"
                  origin: "New York"
                  departureDate: "2025-12-15"
                  returnDate: "2025-12-20"
                  travelers:
                    count: 2
                    adults: 2
                    children: 0
                    infants: 0
                  preferences:
                    interests: ["cultural", "food", "art"]
                    budget:
                      total: 3000
                      currency: "USD"
                      breakdown:
                        flight: 1200
                        accommodation: 800
                        food: 600
                        activities: 400
                    accommodation:
                      type: "hotel"
                      minRating: 4
                      requiredAmenities: ["wifi", "restaurant"]
                    transportation:
                      flightClass: "economy"
                      preferNonStop: true
                    dining:
                      dietaryRestrictions: ["vegetarian"]
                      priceRange: "mid_range"
                  collaboration:
                    createdBy: "user123"
              business_trip:
                summary: Business trip example
                value:
                  title: "Tokyo Business Trip"
                  destination: "Tokyo"
                  origin: "San Francisco"
                  departureDate: "2025-11-10"
                  returnDate: "2025-11-15"
                  travelers: 1
                  preferences:
                    interests: ["business", "food"]
                    budget:
                      total: 4000
                      currency: "USD"
                    accommodation:
                      type: "hotel"
                      minRating: 5
                      requiredAmenities: ["business_center", "wifi"]
                    transportation:
                      flightClass: "business"
                      preferNonStop: true
                  collaboration:
                    createdBy: "executive456"
      responses:
        '201':
          description: Trip created successfully, agent execution initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTripResponse'
        '400':
          description: Validation errors in request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                error: "Validation failed"
                details:
                  - "departureDate cannot be in the past"
                  - "travelers.count must be at least 1"
                  - "interests must contain valid enum values"
                message: "Please check your input and try again"
        '500':
          description: Internal server error during trip creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/trip/{tripId}:
    get:
      summary: Get Trip Details
      description: |
        Retrieve complete trip information including all generated recommendations and user selections.
        
        **Populated Data:**
        - All recommendation objects with full details (not just IDs)
        - Agent execution metadata and confidence scores
        - Selected recommendations with selection timestamps
        - Trip status and collaboration information
        
        **Performance Note:** This endpoint performs multiple database joins. For frequent polling, use `/status` endpoint instead.
      operationId: getTripById
      tags:
        - Trips
      parameters:
        - name: tripId
          in: path
          required: true
          description: Unique trip identifier (generated during trip creation)
          schema:
            type: string
            pattern: '^trip_\d+_[a-z0-9]+$'
          example: "trip_1758349943478_2fq39bbwr"
      responses:
        '200':
          description: Trip details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripDetailsResponse'
        '404':
          description: Trip not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                error: "Trip not found"
                message: "Trip with ID trip_invalid_id does not exist"
        '500':
          description: Database error retrieving trip
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/trip/{tripId}/status:
    get:
      summary: Get Trip Status
      description: |
        Get real-time execution status and agent progress without full recommendation data.
        
        **Optimized for Polling:**
        - Lightweight response (no recommendation details)
        - Real-time agent execution progress
        - Estimated completion times
        - Recommendation counts per category
        
        **Recommended polling interval:** 2-5 seconds during active execution.
      operationId: getTripStatus
      tags:
        - Trips
      parameters:
        - name: tripId
          in: path
          required: true
          description: Unique trip identifier
          schema:
            type: string
            pattern: '^trip_\d+_[a-z0-9]+$'
          example: "trip_1758349943478_2fq39bbwr"
      responses:
        '200':
          description: Trip status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripStatusResponse'
        '404':
          description: Trip not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error retrieving trip status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/trip/{tripId}/select:
    put:
      summary: Select Recommendations
      description: |
        Update user's recommendation selections across all categories.
        
        **Selection Rules:**
        - Can select multiple recommendations per category
        - Previously selected items are replaced (not appended)
        - Recommendation IDs must belong to the specified trip
        - Trip status must be 'recommendations_ready' or 'user_selecting'
        
        **Selection Metadata:**
        - Timestamp of selection
        - User who made the selection
        - Selection rank/order for multiple items
      operationId: selectRecommendations
      tags:
        - Trips
      parameters:
        - name: tripId
          in: path
          required: true
          description: Unique trip identifier
          schema:
            type: string
            pattern: '^trip_\d+_[a-z0-9]+$'
          example: "trip_1758349943478_2fq39bbwr"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectRecommendationsRequest'
            examples:
              partial_selection:
                summary: Selecting some recommendations
                value:
                  selections:
                    flight: ["67144e5c4d2b5f00128a1234"]
                    accommodation: ["67144e5c4d2b5f00128a5678", "67144e5c4d2b5f00128a9012"]
                    activity: ["67144e5c4d2b5f00128a3456"]
                  selectedBy: "user123"
              full_selection:
                summary: Complete trip selections
                value:
                  selections:
                    flight: ["67144e5c4d2b5f00128a1111"]
                    accommodation: ["67144e5c4d2b5f00128a2222"]
                    activity: ["67144e5c4d2b5f00128a3333", "67144e5c4d2b5f00128a4444"]
                    restaurant: ["67144e5c4d2b5f00128a5555"]
                    transportation: ["67144e5c4d2b5f00128a6666"]
                  selectedBy: "user456"
      responses:
        '200':
          description: Selections updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelectRecommendationsResponse'
        '400':
          description: Invalid selections or trip not ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_recommendations:
                  summary: Invalid recommendation IDs
                  value:
                    success: false
                    error: "Invalid recommendation IDs for flight"
                    details: ["67144e5c4d2b5f00128a9999"]
                    message: "Some selected recommendations do not belong to this trip"
                trip_not_ready:
                  summary: Trip not ready for selections
                  value:
                    success: false
                    error: "Trip not ready for selections"
                    message: "Please wait for recommendations to be generated before making selections"
        '404':
          description: Trip not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Error updating selections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/trip/{tripId}/rerun:
    post:
      summary: Rerun Agents
      description: |
        Trigger selective or complete re-execution of AI agents for updated recommendations.
        
        **Use Cases:**
        - User wants different flight options
        - Budget constraints changed
        - Preferences updated after initial planning
        - Agent failures during initial execution
        
        **Process:**
        1. Resets specified agent statuses to 'pending'
        2. Clears existing recommendations for selected agents
        3. Optionally clears user selections
        4. Initiates fresh agent execution
        
        **Execution Time:** 5-10 seconds per agent (parallel execution when possible).
      operationId: rerunAgents
      tags:
        - Trips
      parameters:
        - name: tripId
          in: path
          required: true
          description: Unique trip identifier
          schema:
            type: string
            pattern: '^trip_\d+_[a-z0-9]+$'
          example: "trip_1758349943478_2fq39bbwr"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RerunAgentsRequest'
            examples:
              specific_agents:
                summary: Rerun specific agents
                value:
                  agents: ["flight", "accommodation"]
                  reason: "User wants budget airline options"
                  resetSelections: false
              all_agents:
                summary: Rerun all agents
                value:
                  agents: []
                  reason: "Complete refresh requested"
                  resetSelections: true
              failed_agent:
                summary: Retry failed agent
                value:
                  agents: ["flight"]
                  reason: "Flight agent failed due to API timeout"
                  resetSelections: false
      responses:
        '200':
          description: Agent rerun initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerunAgentsResponse'
        '400':
          description: Invalid agents specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                error: "Invalid agents specified"
                details: ["invalid_agent", "another_bad_agent"]
                message: "Some specified agents are not valid"
        '404':
          description: Trip not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Execution already in progress
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                error: "Execution in progress"
                message: "Cannot rerun agents while execution is currently in progress"
        '500':
          description: Error initiating agent rerun
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [OK, ERROR]
          description: Overall server status
        message:
          type: string
          description: Human-readable status message
        database:
          type: object
          properties:
            isConnected:
              type: boolean
              description: MongoDB connection status
            readyState:
              type: integer
              enum: [0, 1, 2, 3]
              description: Mongoose connection state (0=disconnected, 1=connected, 2=connecting, 3=disconnecting)
            host:
              type: string
              description: Database host
            port:
              type: integer
              description: Database port
            name:
              type: string
              description: Database name
      required: [status, message, database]

    CreateTripRequest:
      type: object
      properties:
        title:
          type: string
          maxLength: 200
          description: User-defined trip title
          example: "Romantic Paris Getaway"
        destination:
          type: string
          description: Destination city or location name
          example: "Paris"
        origin:
          type: string
          description: Origin city or location name
          example: "New York"
        departureDate:
          type: string
          format: date
          description: Trip departure date (ISO 8601 format)
          example: "2025-12-15"
        returnDate:
          type: string
          format: date
          description: Trip return date (optional for one-way trips)
          example: "2025-12-20"
        travelers:
          oneOf:
            - type: integer
              minimum: 1
              maximum: 20
              description: Simple traveler count
            - $ref: '#/components/schemas/TravelerDetails'
        preferences:
          $ref: '#/components/schemas/TripPreferences'
        collaboration:
          $ref: '#/components/schemas/CollaborationInfo'
        triggerOrchestrator:
          type: boolean
          default: true
          description: Whether to immediately start AI agent execution
      required: [destination, origin, departureDate]
      
    TravelerDetails:
      type: object
      properties:
        count:
          type: integer
          minimum: 1
          maximum: 20
          description: Total number of travelers
        adults:
          type: integer
          minimum: 1
          default: 1
          description: Number of adult travelers (18+)
        children:
          type: integer
          minimum: 0
          default: 0
          description: Number of child travelers (2-17)
        infants:
          type: integer
          minimum: 0
          default: 0
          description: Number of infant travelers (0-2)
        details:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Traveler name
              age:
                type: integer
                minimum: 0
                maximum: 120
                description: Traveler age
              type:
                type: string
                enum: [adult, child, infant]
                description: Traveler category
      required: [count]

    TripPreferences:
      type: object
      properties:
        interests:
          type: array
          items:
            type: string
            enum: [cultural, food, adventure, relaxation, nightlife, nature, shopping, history, art, sports, photography, wellness]
          description: User interests for activity recommendations
          example: ["cultural", "food", "art"]
        budget:
          $ref: '#/components/schemas/BudgetPreferences'
        accommodation:
          $ref: '#/components/schemas/AccommodationPreferences'
        transportation:
          $ref: '#/components/schemas/TransportationPreferences'
        dining:
          $ref: '#/components/schemas/DiningPreferences'
        accessibility:
          $ref: '#/components/schemas/AccessibilityPreferences'

    BudgetPreferences:
      type: object
      properties:
        total:
          type: number
          minimum: 0
          description: Total trip budget
          example: 2000
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          default: "USD"
          description: Three-letter currency code
          example: "USD"
        breakdown:
          type: object
          properties:
            flight:
              type: number
              minimum: 0
              description: Flight budget allocation
            accommodation:
              type: number
              minimum: 0
              description: Hotel/lodging budget
            food:
              type: number
              minimum: 0
              description: Dining budget
            activities:
              type: number
              minimum: 0
              description: Activities and tours budget
            transportation:
              type: number
              minimum: 0
              description: Local transportation budget
            miscellaneous:
              type: number
              minimum: 0
              description: Miscellaneous expenses budget

    AccommodationPreferences:
      type: object
      properties:
        type:
          type: string
          enum: [hotel, resort, apartment, hostel, guesthouse, villa, any]
          default: any
          description: Preferred accommodation type
        minRating:
          type: integer
          minimum: 1
          maximum: 5
          default: 3
          description: Minimum accommodation rating (1-5 stars)
        requiredAmenities:
          type: array
          items:
            type: string
            enum: [wifi, parking, pool, gym, spa, restaurant, bar, room_service, concierge, business_center]
          description: Required hotel amenities

    TransportationPreferences:
      type: object
      properties:
        flightClass:
          type: string
          enum: [economy, premium_economy, business, first]
          default: economy
          description: Preferred flight class
        preferNonStop:
          type: boolean
          default: false
          description: Preference for non-stop flights
        localTransport:
          type: string
          enum: [public, taxi, rental_car, walking, mixed]
          default: mixed
          description: Preferred local transportation method

    DiningPreferences:
      type: object
      properties:
        dietaryRestrictions:
          type: array
          items:
            type: string
            enum: [vegetarian, vegan, gluten_free, halal, kosher, nut_free, dairy_free]
          description: Dietary restrictions and requirements
        cuisinePreferences:
          type: array
          items:
            type: string
          description: Preferred cuisine types
          example: ["French", "Italian", "Japanese"]
        priceRange:
          type: string
          enum: [budget, mid_range, fine_dining, mixed]
          default: mixed
          description: Restaurant price range preference

    AccessibilityPreferences:
      type: object
      properties:
        mobilityAssistance:
          type: boolean
          default: false
          description: Requires mobility assistance
        wheelchairAccessible:
          type: boolean
          default: false
          description: Requires wheelchair accessibility
        visualAssistance:
          type: boolean
          default: false
          description: Requires visual assistance
        hearingAssistance:
          type: boolean
          default: false
          description: Requires hearing assistance

    CollaborationInfo:
      type: object
      properties:
        createdBy:
          type: string
          description: User ID of trip creator
          example: "user123"
        collaborators:
          type: array
          items:
            type: object
            properties:
              userId:
                type: string
                description: Collaborator user ID
              role:
                type: string
                enum: [owner, editor, viewer]
                default: viewer
                description: Collaborator role and permissions
        isPublic:
          type: boolean
          default: false
          description: Whether trip is publicly accessible
      required: [createdBy]

    CreateTripResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            tripId:
              type: string
              description: Unique trip identifier
              example: "trip_1758349943478_2fq39bbwr"
            status:
              type: string
              enum: [draft, planning, recommendations_ready, user_selecting, finalized, cancelled]
              description: Current trip status
            title:
              type: string
              description: Trip title
            destination:
              type: string
              description: Destination name
            origin:
              type: string
              description: Origin name
            dates:
              type: object
              properties:
                departureDate:
                  type: string
                  format: date-time
                  description: Trip departure date
                returnDate:
                  type: string
                  format: date-time
                  description: Trip return date
                duration:
                  type: integer
                  description: Trip duration in days
            travelers:
              $ref: '#/components/schemas/TravelerDetails'
            agentExecution:
              $ref: '#/components/schemas/AgentExecutionStatus'
        message:
          type: string
          description: Success message
          example: "Trip created successfully, planning in progress"
      required: [success, data, message]

    AgentExecutionStatus:
      type: object
      properties:
        status:
          type: string
          enum: [pending, in_progress, completed, failed, partial]
          description: Overall execution status
        startedAt:
          type: string
          format: date-time
          description: Execution start timestamp
        completedAt:
          type: string
          format: date-time
          description: Execution completion timestamp
        totalDuration:
          type: number
          description: Total execution time in milliseconds
        agents:
          type: object
          properties:
            flight:
              $ref: '#/components/schemas/AgentStatus'
            accommodation:
              $ref: '#/components/schemas/AgentStatus'
            activity:
              $ref: '#/components/schemas/AgentStatus'
            restaurant:
              $ref: '#/components/schemas/AgentStatus'
            transportation:
              $ref: '#/components/schemas/AgentStatus'

    AgentStatus:
      type: object
      properties:
        status:
          type: string
          enum: [pending, running, completed, failed, skipped]
          description: Individual agent status
        startedAt:
          type: string
          format: date-time
          description: Agent start timestamp
        completedAt:
          type: string
          format: date-time
          description: Agent completion timestamp
        duration:
          type: number
          description: Agent execution time in milliseconds
        confidence:
          type: number
          minimum: 0
          maximum: 1
          description: Agent confidence score (0-1)
        recommendationCount:
          type: integer
          minimum: 0
          description: Number of recommendations generated
        errors:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
                description: Error message
              timestamp:
                type: string
                format: date-time
                description: Error timestamp
              stack:
                type: string
                description: Error stack trace

    TripDetailsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/TripDetails'
        message:
          type: string
          description: Success message
          example: "Trip retrieved successfully"
      required: [success, data, message]

    TripDetails:
      type: object
      properties:
        tripId:
          type: string
          description: Unique trip identifier
        title:
          type: string
          description: Trip title
        destination:
          type: object
          properties:
            name:
              type: string
              description: Destination name
            country:
              type: string
              description: Destination country
            coordinates:
              type: object
              properties:
                latitude:
                  type: number
                longitude:
                  type: number
            placeId:
              type: string
              description: Google Places API place ID
        origin:
          type: object
          properties:
            name:
              type: string
              description: Origin name
            country:
              type: string
              description: Origin country
            coordinates:
              type: object
              properties:
                latitude:
                  type: number
                longitude:
                  type: number
            airportCode:
              type: string
              pattern: '^[A-Z]{3}$'
              description: Three-letter airport code
        dates:
          type: object
          properties:
            departureDate:
              type: string
              format: date-time
            returnDate:
              type: string
              format: date-time
            duration:
              type: integer
              description: Trip duration in days
        travelers:
          $ref: '#/components/schemas/TravelerDetails'
        preferences:
          $ref: '#/components/schemas/TripPreferences'
        recommendations:
          type: object
          properties:
            flight:
              type: array
              items:
                $ref: '#/components/schemas/Recommendation'
            accommodation:
              type: array
              items:
                $ref: '#/components/schemas/Recommendation'
            activity:
              type: array
              items:
                $ref: '#/components/schemas/Recommendation'
            restaurant:
              type: array
              items:
                $ref: '#/components/schemas/Recommendation'
            transportation:
              type: array
              items:
                $ref: '#/components/schemas/Recommendation'
        selectedRecommendations:
          type: object
          properties:
            flight:
              type: array
              items:
                $ref: '#/components/schemas/SelectedRecommendation'
            accommodation:
              type: array
              items:
                $ref: '#/components/schemas/SelectedRecommendation'
            activity:
              type: array
              items:
                $ref: '#/components/schemas/SelectedRecommendation'
            restaurant:
              type: array
              items:
                $ref: '#/components/schemas/SelectedRecommendation'
            transportation:
              type: array
              items:
                $ref: '#/components/schemas/SelectedRecommendation'
        status:
          type: string
          enum: [draft, planning, recommendations_ready, user_selecting, finalized, cancelled]
        totalRecommendations:
          type: integer
          description: Total number of recommendations across all categories
        totalSelectedRecommendations:
          type: integer
          description: Total number of selected recommendations

    Recommendation:
      type: object
      properties:
        _id:
          type: string
          description: Unique recommendation identifier
        type:
          type: string
          enum: [flight, accommodation, activity, restaurant, transportation]
          description: Recommendation category
        title:
          type: string
          description: Recommendation title
        description:
          type: string
          description: Detailed description
        provider:
          type: string
          description: Source provider (e.g., Amadeus, Booking.com)
        confidence:
          type: number
          minimum: 0
          maximum: 1
          description: AI confidence score (0-1)
        pricing:
          type: object
          properties:
            amount:
              type: number
              description: Price amount
            currency:
              type: string
              pattern: '^[A-Z]{3}$'
              description: Currency code
            priceCategory:
              type: string
              enum: [budget, mid_range, luxury]
              description: Price category
        metadata:
          type: object
          description: Provider-specific additional data
          additionalProperties: true
        selection:
          type: object
          properties:
            isSelected:
              type: boolean
              description: Whether recommendation is selected
            selectedAt:
              type: string
              format: date-time
              description: Selection timestamp
            selectedBy:
              type: string
              description: User who selected this recommendation
        createdAt:
          type: string
          format: date-time
          description: Recommendation creation timestamp

    SelectedRecommendation:
      type: object
      properties:
        recommendation:
          $ref: '#/components/schemas/Recommendation'
        selectedAt:
          type: string
          format: date-time
          description: Selection timestamp
        selectedBy:
          type: string
          description: User who made the selection
        selectionRank:
          type: integer
          description: Order of selection when multiple items selected

    TripStatusResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            tripId:
              type: string
              description: Unique trip identifier
            status:
              type: string
              enum: [draft, planning, recommendations_ready, user_selecting, finalized, cancelled]
              description: Current trip status
            execution:
              $ref: '#/components/schemas/AgentExecutionStatus'
            recommendationCounts:
              type: object
              properties:
                flight:
                  type: integer
                  description: Number of flight recommendations
                accommodation:
                  type: integer
                  description: Number of accommodation recommendations
                activity:
                  type: integer
                  description: Number of activity recommendations
                restaurant:
                  type: integer
                  description: Number of restaurant recommendations
                transportation:
                  type: integer
                  description: Number of transportation recommendations
            lastUpdated:
              type: string
              format: date-time
              description: Last update timestamp
        message:
          type: string
          example: "Trip status retrieved successfully"
      required: [success, data, message]

    SelectRecommendationsRequest:
      type: object
      properties:
        selections:
          type: object
          properties:
            flight:
              type: array
              items:
                type: string
                description: Flight recommendation ID
            accommodation:
              type: array
              items:
                type: string
                description: Accommodation recommendation ID
            activity:
              type: array
              items:
                type: string
                description: Activity recommendation ID
            restaurant:
              type: array
              items:
                type: string
                description: Restaurant recommendation ID
            transportation:
              type: array
              items:
                type: string
                description: Transportation recommendation ID
          description: Map of category to array of recommendation IDs
        selectedBy:
          type: string
          default: "user"
          description: User identifier making the selections
      required: [selections]

    SelectRecommendationsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            tripId:
              type: string
              description: Trip identifier
            status:
              type: string
              enum: [user_selecting, finalized]
              description: Updated trip status
            selectionSummary:
              type: object
              properties:
                flight:
                  type: integer
                accommodation:
                  type: integer
                activity:
                  type: integer
                restaurant:
                  type: integer
                transportation:
                  type: integer
              description: Count of selections per category
            selectedRecommendations:
              type: object
              description: Updated selected recommendations
            totalSelected:
              type: integer
              description: Total number of selected recommendations
        message:
          type: string
          example: "Trip selections updated successfully"
      required: [success, data, message]

    RerunAgentsRequest:
      type: object
      properties:
        agents:
          type: array
          items:
            type: string
            enum: [flight, accommodation, activity, restaurant, transportation]
          description: Specific agents to rerun (empty array means all agents)
          default: []
        reason:
          type: string
          default: "User requested rerun"
          description: Reason for rerunning agents
        resetSelections:
          type: boolean
          default: false
          description: Whether to clear existing user selections

    RerunAgentsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            tripId:
              type: string
              description: Trip identifier
            retriggeredAgents:
              type: array
              items:
                type: string
              description: List of agents that were restarted
            status:
              type: string
              enum: [planning]
              description: Updated trip status
            reason:
              type: string
              description: Reason for rerun
            resetSelections:
              type: boolean
              description: Whether selections were reset
            estimatedDuration:
              type: string
              description: Estimated time for completion
              example: "30-60 seconds"
        message:
          type: string
          example: "Agents rerun initiated successfully"
      required: [success, data, message]

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          description: Error type or category
        details:
          type: array
          items:
            type: string
          description: Detailed error messages or validation errors
        message:
          type: string
          description: User-friendly error message
      required: [success, error, message]

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token authentication (not yet implemented)

# Currently no authentication required
security: []

tags:
  - name: System
    description: System health and status endpoints
  - name: Trips
    description: Trip creation, management, and recommendation operations

externalDocs:
  description: TravlrAPI Documentation
  url: https://docs.travlr.com